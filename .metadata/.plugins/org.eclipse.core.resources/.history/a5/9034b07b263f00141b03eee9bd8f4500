package com.iepl.pathapp;

import net.simonvt.menudrawer.MenuDrawer;
import net.simonvt.menudrawer.MenuDrawer.OnDrawerStateChangeListener;
import net.simonvt.menudrawer.Position;
import net.simonvt.menudrawer.MenuDrawer.Type;

import org.androidannotations.annotations.EActivity;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.GoogleMap.OnMarkerClickListener;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;
import com.iepl.pathapp.fragment.ListViewFragment;
import com.iepl.pathapp.fragment.MenuFragment;
import com.sothree.slidinguppanel.SlidingUpPanelLayout;
import com.sothree.slidinguppanel.SlidingUpPanelLayout.PanelSlideListener;

import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentManager;
import android.os.Build;
import android.os.Bundle;
import android.util.Log;
import android.view.DragEvent;
import android.view.View;
import android.view.View.OnDragListener;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.AdapterView.OnItemClickListener;

@EActivity
public class SlideUpActivity extends Activity
{
	protected static final String TAG = "SlideUpActivity";
	protected SlidingUpPanelLayout mLayout;
	protected MenuDrawer mDrawer;
	protected ListView mDrawerList;
	protected GoogleMap map;
	protected LatLng[] mapPositions = new LatLng[7];
	protected Marker[] mapMarkers = new Marker[7];
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {		
		super.onCreate(savedInstanceState);	
		mDrawer = MenuDrawer.attach(this, Type.OVERLAY, Position.LEFT, MenuDrawer.MENU_DRAG_WINDOW);
		mDrawer.setContentView(R.layout.slideup_layout);
		mDrawer.setMenuView(R.layout.left_menu);
		mDrawer.setOnDrawerStateChangeListener(new OnDrawerStateChangeListener(){
			@Override
			public void onDrawerStateChange(int oldState, int newState) {				
			}
			
			@Override
			public void onDrawerSlide(float openRatio, int offsetPixels) {
				mLayout.collapsePanel();				
			}});
		
		setLeftMenuItems();
		mDrawer.setSlideDrawable(R.drawable.ic_drawer);
		mDrawer.setDrawerIndicatorEnabled(true);   
	    	     
	     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
	            getActionBar().setDisplayHomeAsUpEnabled(true);
	        } 
		
	     this.setUpSlideUpPanel();		
	    //this.initMap();        
	}	
	
	protected void setUpSlideUpPanel() {
		mLayout = (SlidingUpPanelLayout) findViewById(R.id.sliding_layout);
		mLayout.setAnchorPoint(.7f);
		mLayout.setOverlayed(true);		
		mLayout.setPanelSlideListener(new SlidePanelActionListener() );		
	}

	protected void setUpDrawer() {
		
		  
	}

	protected void  initMap() {
		map = ((MapFragment) getFragmentManager()
	                .findFragmentById(R.id.map)).getMap();	        

	    map.setMyLocationEnabled(true);	    
	    
		mapPositions[0] = new LatLng(-33.867, 151.206);
		mapPositions[1] = new LatLng(-33.867, 161.206);
		mapPositions[2] = new LatLng(-33.867, 171.206);
		mapPositions[3] = new LatLng(-33.867, 151.206);
		mapPositions[4] = new LatLng(-32.867, 151.206);
		mapPositions[5] = new LatLng(-31.867, 151.206);
		mapPositions[6] = new LatLng(-34.867, 151.206);
		this.setMap(0);		
	}
	
	protected void setMap(int position) {		 
	        map.moveCamera(CameraUpdateFactory.newLatLngZoom(mapPositions[position], 13));

	        Marker mMarker = map.addMarker(new MarkerOptions()
	                .title("location " + position)
	                .snippet("The most populous city in Australia.")
	                .position(mapPositions[position]));  
	        mapMarkers[position] = mMarker;
	        
	        map.setOnMarkerClickListener(new OnMarkerClickListener() {
				
				@Override
				public boolean onMarkerClick(Marker marker) {				
					Log.d("marker", marker.getTitle());					
					ChangeTopViewPanel(new MenuFragment());					
					return false;
				}
			});
	}
	
	
	protected void setLeftMenuItems() {	
		mDrawerList = (ListView) findViewById(R.id.drawer_list);
	
		ArrayAdapter<String> adapter = new ArrayAdapter<String>(getBaseContext(), 
				R.layout.drawer_list_item, getResources().getStringArray(R.array.menus));

		// Setting the adapter on mDrawerList
		mDrawerList.setAdapter(adapter);	
		
		mDrawerList.setOnItemClickListener(new ItemClickListener());
				
	}
		
	protected void ChangeTopViewPanel(Fragment fragment) {
		FragmentManager fragmentManager = getFragmentManager();
		fragmentManager.beginTransaction().replace(R.id.content_panel, fragment).commit();
	}
	
	protected void ChangeBottomViewPanel(Fragment fragment) {
		FragmentManager fragmentManager = getFragmentManager();
		fragmentManager.beginTransaction().replace(R.id.content_panel_bottom, fragment).commit();
	}
	
	private class ItemClickListener implements OnItemClickListener
	{
		@Override
		public void onItemClick(AdapterView<?> parent, View view, int pos,
				long id) {
			mDrawer.closeMenu();
			if (pos == 1) {			
				Log.i(TAG,"Changing view to List");
				ListViewFragment fragment = new ListViewFragment();
				fragment.setMenuDrawer(mDrawer);
				ChangeTopViewPanel(fragment);	
				ChangeBottomViewPanel(new MenuFragment());
			}
			else {
				ChangeTopViewPanel(new MenuFragment());					
			}
		}		
	}
	
	private class SlidePanelActionListener implements PanelSlideListener
	{		
			ListViewFragment fragment = new ListViewFragment();
			
            @Override
            public void onPanelSlide(View panel, float slideOffset) {
                Log.i(TAG, "onPanelSlide, offset " + slideOffset);
                
            }

            @Override
            public void onPanelExpanded(View panel) {
                Log.i(TAG, "onPanelExpanded");
                
				fragment.setMenuDrawer(mDrawer);
				ChangeTopViewPanel(fragment);

            }

            @Override
            public void onPanelCollapsed(View panel) {
                Log.i(TAG, "onPanelCollapsed");
                ChangeTopViewPanel(new MenuFragment());
            }

            @Override
            public void onPanelAnchored(View panel) {
                Log.i(TAG, "onPanelAnchored");
                ChangeTopViewPanel(fragment);

            }

			@Override
			public void onPanelHidden(View panel) {
				 Log.i(TAG, "onPanelHidden");
				
			}        
	}
}
